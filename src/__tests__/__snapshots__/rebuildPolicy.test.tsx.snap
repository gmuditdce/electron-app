// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should test Header component 1`] = `
<Fragment>
  <div
    className="makeStyles-root-1"
  >
    <SideDrawer
      showBack={false}
    />
    <main
      className="makeStyles-content-3"
    >
      <div
        className="makeStyles-toolbar-2"
      />
      <div
        className="makeStyles-contentArea-4"
      >
        <div>
          <h3>
            Current Rebuild Policy
          </h3>
          <WithStyles(ForwardRef(Grid))
            container={true}
          >
            <WithStyles(ForwardRef(Grid))
              item={true}
              xs={12}
            >
              <div
                id="current-policy"
              >
                <div
                  className="makeStyles-divStyle-17"
                >
                  <ThemeProvider
                    theme={
                      Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "rgb(51, 100, 116)",
                            "light": "rgb(109, 165, 184)",
                            "main": "#498FA7",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "rgb(148, 83, 84)",
                            "light": "rgb(220, 146, 147)",
                            "main": "#D47779",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      }
                    }
                  >
                    <WithStyles(ForwardRef(Button))
                      className="makeStyles-saveBtn-16"
                      onClick={[Function]}
                    >
                      Save
                    </WithStyles(ForwardRef(Button))>
                  </ThemeProvider>
                </div>
                <h3
                  className="makeStyles-heading-18"
                >
                  PDF Config
                </h3>
                <form
                  autoComplete="off"
                  className="makeStyles-root-1"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="pdf-watermark"
                      style={
                        Object {
                          "backgroundColor": "#999",
                        }
                      }
                    >
                      Watermark
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Input))
                      id="pdf-watermark"
                      onChange={[Function]}
                      value="Glasswall Protected"
                    />
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="pdf-metadata"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #44a748 , #19931f)",
                        }
                      }
                    >
                      Metadata
                    </WithStyles(ForwardRef(InputLabel))>
                    <ThemeProvider
                      theme={
                        Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {
                            "MuiInputBase": Object {
                              "input": Object {
                                "&:before": Object {
                                  "background": "#75c16e",
                                  "borderRadius": "24px",
                                  "boxShadow": "2px 3px 4px #777",
                                  "color": "#fff",
                                  "content": "close-quote",
                                  "display": "none",
                                  "fontSize": "14px",
                                  "height": "5px",
                                  "padding": "5px 5px",
                                  "position": "absolute",
                                  "right": "-16px",
                                  "textAlign": "center",
                                  "top": "-36px",
                                  "width": "5px",
                                },
                                "overflow": "visible",
                              },
                            },
                            "MuiSelect": Object {
                              "select": Object {
                                "&:focus": Object {
                                  "background": "transparent",
                                },
                              },
                            },
                          },
                          "palette": Object {
                            "action": Object {
                              "activatedOpacity": 0.12,
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "disabledOpacity": 0.38,
                              "focus": "rgba(0, 0, 0, 0.12)",
                              "focusOpacity": 0.12,
                              "hover": "rgba(0, 0, 0, 0.04)",
                              "hoverOpacity": 0.04,
                              "selected": "rgba(0, 0, 0, 0.08)",
                              "selectedOpacity": 0.08,
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "info": Object {
                              "contrastText": "#fff",
                              "dark": "#1976d2",
                              "light": "#64b5f6",
                              "main": "#2196f3",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                            "warning": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#f57c00",
                              "light": "#ffb74d",
                              "main": "#ff9800",
                            },
                          },
                          "props": Object {},
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Select))
                        inputProps={
                          Object {
                            "id": "pdf-metadata",
                            "name": "pdfMetadata",
                          }
                        }
                        onChange={[Function]}
                        value="sanitise"
                      >
                        <WithStyles(ForwardRef(MenuItem))
                          value="sanitise"
                        >
                          Sanitise
                        </WithStyles(ForwardRef(MenuItem))>
                        <WithStyles(ForwardRef(MenuItem))
                          value="allow"
                        >
                          Allow
                        </WithStyles(ForwardRef(MenuItem))>
                        <WithStyles(ForwardRef(MenuItem))
                          value="disallow"
                        >
                          Disallow
                        </WithStyles(ForwardRef(MenuItem))>
                      </WithStyles(ForwardRef(Select))>
                    </ThemeProvider>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="pdf-acroform"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #44a748 , #19931f)",
                        }
                      }
                    >
                      Acroform
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "pdf-acroform",
                          "name": "pdfAcroform",
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="pdf-javascript"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #7d158e , #630673)",
                        }
                      }
                    >
                      Javascript
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "pdf-javascript",
                          "name": "pdfJavascript",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="pdf-actions-all"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #44a748 , #19931f)",
                        }
                      }
                    >
                      Actions All
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "pdf-actions-all",
                          "name": "pdfActionsAll",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="pdf-embedded-files"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #13a3b5 , #0a8494)",
                        }
                      }
                    >
                      Embedded Files
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "pdf-embedded-files",
                          "name": "pdfEmbeddedFiles",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="pdf-internal-hyperlinks"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #7d158e , #630673)",
                        }
                      }
                    >
                      Internal Hyperlinks
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "pdf-internal-hyperlinks",
                          "name": "pdfInternalHyperlinks",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="pdf-external-hyperlinks"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #13a3b5 , #0a8494)",
                        }
                      }
                    >
                      External Hyperlinks
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "pdf-external-hyperlinks",
                          "name": "pdfExternalHyperlinks",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="pdf-embedded-images"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #7d158e , #630673)",
                        }
                      }
                    >
                      Embedded Images
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "pdf-embedded-images",
                          "name": "pdfEmbeddedImages",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                </form>
                <h3>
                  Word Config
                </h3>
                <form
                  autoComplete="off"
                  className="makeStyles-root-1"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="word-metadata"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #de423f , #c4201c)",
                        }
                      }
                    >
                      Metadata
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "word-macros",
                          "name": "wordMacros",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="word-macros"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #de423f , #c4201c)",
                        }
                      }
                    >
                      Macros
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "word-macros",
                          "name": "wordMacros",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="word-review-comments"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #f4910d , #d57b03)",
                        }
                      }
                    >
                      Review Comments
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "word-review-comments",
                          "name": "wordReviewComments",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="word-embedded-files"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #13a3b5 , #0a8494)",
                        }
                      }
                    >
                      Embedded Files
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "word-embedded-files",
                          "name": "wordEmbeddedFiles",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="word-internal-hyperlinks"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #7d158e , #630673)",
                        }
                      }
                    >
                      Internal Hyperlinks
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "word-internal-hyperlinks",
                          "name": "wordInternalHyperlinks",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="word-external-hyperlinks"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #13a3b5 , #0a8494)",
                        }
                      }
                    >
                      External Hyperlinks
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "word-external-hyperlinks",
                          "name": "wordExternalHyperlinks",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="word-dynamic-data-exchange"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #7d158e , #630673)",
                        }
                      }
                    >
                      Dynamic Data Exchange
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "word-dynamic-data-exchange",
                          "name": "wordDynamicDataExchange",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="word-embedded-images"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #13a3b5 , #0a8494)",
                        }
                      }
                    >
                      Embedded Images
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "word-embedded-images",
                          "name": "wordEmbeddedImages",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                </form>
                <h3>
                  Excel Config
                </h3>
                <form
                  autoComplete="off"
                  className="makeStyles-root-1"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="excel-macros"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #de423f , #c4201c)",
                        }
                      }
                    >
                      Macros
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "excel-macros",
                          "name": "excelMacros",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="excel-metadata"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #44a748 , #19931f)",
                        }
                      }
                    >
                      Metadata
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "excel-metadata",
                          "name": "excelMetadata",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="excel-review-comments"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #f4910d , #d57b03)",
                        }
                      }
                    >
                      Review Comments
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "excel-review-comments",
                          "name": "excelReviewComments",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="excel-embedded-files"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #13a3b5 , #0a8494)",
                        }
                      }
                    >
                      Embedded Files
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "excel-embedded-files",
                          "name": "excelEmbeddedFiles",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="excel-internal-hyperlinks"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #7d158e , #630673)",
                        }
                      }
                    >
                      Internal Hyperlinks
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "excel-internal-hyperlinks",
                          "name": "internalHyperlinks",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="excel-external-hyperlinks"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #44a748 , #19931f)",
                        }
                      }
                    >
                      External Hyperlinks
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "excel-external-hyperlinks",
                          "name": "excelExternalHyperlinks",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="excel-dynamic-data-exchange"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #13a3b5 , #0a8494)",
                        }
                      }
                    >
                      Dynamic Data Exchange
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "excel-dynamic-data-exchange",
                          "name": "excelDynamicDataExchange",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="excel-embedded-images"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #7d158e , #630673)",
                        }
                      }
                    >
                      Embedded Images
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "excel-embedded-images",
                          "name": "excelEmbeddedImages",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                </form>
                <h3>
                  Powerpoint Config
                </h3>
                <form
                  autoComplete="off"
                  className="makeStyles-root-1"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="ppt-macros"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #de423f , #c4201c)",
                        }
                      }
                    >
                      Macros
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "ppt-macros",
                          "name": "pptMacros",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="ppt-metadata"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #44a748 , #19931f)",
                        }
                      }
                    >
                      Metadata
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "ppt-metadata",
                          "name": "pptMetadata",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="ppt-review-comments"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #f4910d , #d57b03)",
                        }
                      }
                    >
                      Review Comments
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "ppt-review-comments",
                          "name": "pptReviewComments",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="ppt-embedded-files"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #13a3b5 , #0a8494)",
                        }
                      }
                    >
                      Embedded Files
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "ppt-embedded-files",
                          "name": "pptEmbeddedFiles",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="ppt-internal-hyperlinks"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #7d158e , #630673)",
                        }
                      }
                    >
                      Internal Hyperlinks
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "ppt-internal-hyperlinks",
                          "name": "pptInternalHyperlinks",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="ppt-external-hyperlinks"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #13a3b5 , #0a8494)",
                        }
                      }
                    >
                      External Hyperlinks
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "ppt-external-hyperlinks",
                          "name": "pptExternalHyperlinks",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="ppt-embedded-images"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #7d158e , #630673)",
                        }
                      }
                    >
                      Embedded Images
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "ppt-embedded-images",
                          "name": "pptEmbeddedImages",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                </form>
                <h3>
                  Tiff Config
                </h3>
                <form
                  autoComplete="off"
                  className="makeStyles-root-1"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="makeStyles-formControl-14"
                  >
                    <WithStyles(ForwardRef(InputLabel))
                      className="makeStyles-inputLabel-12"
                      htmlFor="tiff-geotiff"
                      style={
                        Object {
                          "background": "linear-gradient(to right, #de423f , #c4201c)",
                        }
                      }
                    >
                      Geotiff
                    </WithStyles(ForwardRef(InputLabel))>
                    <WithStyles(ForwardRef(Select))
                      className="makeStyles-selectBox-11"
                      inputProps={
                        Object {
                          "id": "tiff-geotiff",
                          "name": "geotiff",
                          "readOnly": false,
                        }
                      }
                      onChange={[Function]}
                      value="sanitise"
                    >
                      <WithStyles(ForwardRef(MenuItem))
                        value="sanitise"
                      >
                        Sanitise
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="allow"
                      >
                        Allow
                      </WithStyles(ForwardRef(MenuItem))>
                      <WithStyles(ForwardRef(MenuItem))
                        value="disallow"
                      >
                        Disallow
                      </WithStyles(ForwardRef(MenuItem))>
                    </WithStyles(ForwardRef(Select))>
                  </WithStyles(ForwardRef(FormControl))>
                </form>
              </div>
            </WithStyles(ForwardRef(Grid))>
          </WithStyles(ForwardRef(Grid))>
        </div>
      </div>
    </main>
  </div>
  <Footer />
</Fragment>
`;
